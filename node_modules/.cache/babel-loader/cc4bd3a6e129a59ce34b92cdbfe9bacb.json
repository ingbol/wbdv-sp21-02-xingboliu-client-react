{"ast":null,"code":"import React from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport courseService from \"../services/course-sevice\";\nexport default class CourseManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      courses: []\n    };\n\n    this.updateCourse = course => {\n      courseService.updateCourse(course._id, course).then(status => {\n        this.setState(prevState => {\n          let nextState = { ...prevState\n          };\n          nextState.course = prevState.course.map(c => {\n            if (c._id === course._id) {\n              return course;\n            } else {\n              return c;\n            }\n          });\n          return nextState;\n        });\n      });\n    };\n\n    this.deleteCourse = course => {\n      courseService.deleteCourse(course._id).then(status => {\n        this.setState(prevState => {\n          courses: prevState.course.filter(c => c._id !== course._id);\n        });\n      });\n    };\n\n    this.addCourse = title => {\n      const newCourse = {\n        title: `${title}`,\n        owner: \"me\",\n        lastModified: new Date().getFullYear()\n      };\n      courseService.createCourse(newCourse).then(actualCourse => {\n        this.state.courses.push(actualCourse);\n        this.setState(this.state);\n      });\n    };\n  }\n\n  componentDidMount() {\n    courseService.findAllCourses().then(course => this.setState({\n      course\n    }));\n  }\n\n  render() {}\n\n}","map":{"version":3,"sources":["/Users/liuxingbo/webdev/2021/spring/02/wbdv-sp21-02-xingboliu-client-react/src/components/course-manager.js"],"names":["React","Link","Route","courseService","CourseManager","Component","state","courses","updateCourse","course","_id","then","status","setState","prevState","nextState","map","c","deleteCourse","filter","addCourse","title","newCourse","owner","lastModified","Date","getFullYear","createCourse","actualCourse","push","componentDidMount","findAllCourses","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,eAAe,MAAMC,aAAN,SACHJ,KAAK,CAACK,SADH,CACa;AAAA;AAAA;AAAA,SACxBC,KADwB,GAChB;AACJC,MAAAA,OAAO,EAAE;AADL,KADgB;;AAAA,SAUxBC,YAVwB,GAURC,MAAD,IAAY;AACvBN,MAAAA,aAAa,CAACK,YAAd,CAA2BC,MAAM,CAACC,GAAlC,EAAuCD,MAAvC,EACKE,IADL,CACUC,MAAM,IAAI;AACZ,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,cAAIC,SAAS,GAAG,EAAC,GAAGD;AAAJ,WAAhB;AACAC,UAAAA,SAAS,CAACN,MAAV,GAAmBK,SAAS,CAACL,MAAV,CAAiBO,GAAjB,CAAqBC,CAAC,IAAI;AACzC,gBAAGA,CAAC,CAACP,GAAF,KAAUD,MAAM,CAACC,GAApB,EAAyB;AACrB,qBAAOD,MAAP;AACH,aAFD,MAEO;AACH,qBAAOQ,CAAP;AACH;AACJ,WANkB,CAAnB;AAOA,iBAAOF,SAAP;AACH,SAVD;AAWH,OAbL;AAcH,KAzBuB;;AAAA,SA2BxBG,YA3BwB,GA2BRT,MAAD,IAAY;AACvBN,MAAAA,aAAa,CAACe,YAAd,CAA2BT,MAAM,CAACC,GAAlC,EACKC,IADL,CACUC,MAAM,IAAI;AACZ,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACvBP,UAAAA,OAAO,EAAEO,SAAS,CAACL,MAAV,CAAiBU,MAAjB,CAAwBF,CAAC,IAAIA,CAAC,CAACP,GAAF,KAAUD,MAAM,CAACC,GAA9C;AACZ,SAFD;AAGH,OALL;AAMH,KAlCuB;;AAAA,SAoCxBU,SApCwB,GAoCXC,KAAD,IAAW;AACnB,YAAMC,SAAS,GAAG;AACdD,QAAAA,KAAK,EAAG,GAAEA,KAAM,EADF;AAEdE,QAAAA,KAAK,EAAE,IAFO;AAGdC,QAAAA,YAAY,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AAHA,OAAlB;AAKAvB,MAAAA,aAAa,CAACwB,YAAd,CAA2BL,SAA3B,EACKX,IADL,CACUiB,YAAY,IAAI;AAClB,aAAKtB,KAAL,CAAWC,OAAX,CAAmBsB,IAAnB,CAAwBD,YAAxB;AACA,aAAKf,QAAL,CAAc,KAAKP,KAAnB;AACH,OAJL;AAKH,KA/CuB;AAAA;;AAKxBwB,EAAAA,iBAAiB,GAAG;AAChB3B,IAAAA,aAAa,CAAC4B,cAAd,GACKpB,IADL,CACUF,MAAM,IAAI,KAAKI,QAAL,CAAc;AAACJ,MAAAA;AAAD,KAAd,CADpB;AAEH;;AAyCDuB,EAAAA,MAAM,GAAG,CAER;;AAnDuB","sourcesContent":["import React from \"react\";\nimport {Link, Route} from \"react-router-dom\";\nimport courseService from \"../services/course-sevice\"\n\nexport default class CourseManager\n    extends React.Component {\n    state = {\n        courses: []\n    }\n\n    componentDidMount() {\n        courseService.findAllCourses()\n            .then(course => this.setState({course}))\n    }\n\n    updateCourse = (course) => {\n        courseService.updateCourse(course._id, course)\n            .then(status => {\n                this.setState(prevState => {\n                    let nextState = {...prevState}\n                    nextState.course = prevState.course.map(c => {\n                        if(c._id === course._id) {\n                            return course\n                        } else {\n                            return c\n                        }\n                    })\n                    return nextState\n                })\n            })\n    }\n\n    deleteCourse = (course) => {\n        courseService.deleteCourse(course._id)\n            .then(status => {\n                this.setState(prevState => {\n                    courses: prevState.course.filter(c => c._id !== course._id)\n                })\n            })\n    }\n\n    addCourse = (title) => {\n        const newCourse = {\n            title: `${title}`,\n            owner: \"me\",\n            lastModified: new Date().getFullYear()\n        }\n        courseService.createCourse(newCourse)\n            .then(actualCourse => {\n                this.state.courses.push(actualCourse)\n                this.setState(this.state)\n            })\n    }\n\n    render() {\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}