{"ast":null,"code":"var _jsxFileName = \"/Users/liuxingbo/webdev/2021/spring/02/wbdv-sp21-02-xingboliu-client-react/src/components/quiz/question/true-false-question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TrueFalseQuestion = ({\n  question\n}) => {\n  _s();\n\n  const [selectedAnswer, setSelectedAnswer] = useState([]);\n  const [graded, setGraded] = useState(false);\n\n  const getBackgroundColor = choice => {\n    if (choice === question.correct) {\n      return \"list-group-item-success\";\n    } else if (choice === selectedAnswer) {\n      return \"list-group-item-danger\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const getIcon = choice => {\n    if (choice === question.correct) {\n      return \"fas fa-check\";\n    } else if (choice === selectedAnswer) {\n      return \"fas fa-times\";\n    } else {\n      return \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [question.title, graded === true && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `float-right ${selectedAnswer === question.correct ? 'fas fa-check text-success' : 'fas fa-times text-danger'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: `list-group-item ${graded === true ? getBackgroundColor(\"true\") : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: question._id,\n            value: \"true\",\n            onClick: () => {\n              if (graded === false) {\n                setSelectedAnswer(\"true\");\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 32\n          }, this), \"True\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), graded === true && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `float-right ${getIcon(\"true\")}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `list-group-item ${graded === true ? getBackgroundColor(\"false\") : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: question._id,\n            value: \"false\",\n            onClick: () => {\n              if (graded === false) {\n                setSelectedAnswer(\"false\");\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 32\n          }, this), \"False\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), graded === true && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `float-right ${getIcon(\"false\")}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your answer: \", selectedAnswer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: () => {\n        setGraded(true);\n      },\n      children: \"Grade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TrueFalseQuestion, \"5vUkRD3tq0ZRC+XVJaJv4rjiWGo=\");\n\n_c = TrueFalseQuestion;\nexport default TrueFalseQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrueFalseQuestion\");","map":{"version":3,"sources":["/Users/liuxingbo/webdev/2021/spring/02/wbdv-sp21-02-xingboliu-client-react/src/components/quiz/question/true-false-question.js"],"names":["React","useState","TrueFalseQuestion","question","selectedAnswer","setSelectedAnswer","graded","setGraded","getBackgroundColor","choice","correct","getIcon","title","_id"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\n\nconst TrueFalseQuestion = ({question}) => {\n    const [selectedAnswer, setSelectedAnswer] = useState([])\n    const [graded, setGraded] = useState(false)\n\n    const getBackgroundColor = (choice) => {\n        if (choice === question.correct) {\n            return \"list-group-item-success\"\n        } else if (choice === selectedAnswer) {\n            return \"list-group-item-danger\"\n        } else {\n            return \"\"\n        }\n    }\n\n    const getIcon = (choice) => {\n        if (choice === question.correct) {\n            return \"fas fa-check\"\n        } else if (choice === selectedAnswer) {\n            return \"fas fa-times\"\n        } else {\n            return \"\"\n        }\n    }\n\n        return (\n            <>\n                <h3>\n                    {question.title}\n                    {\n                        graded === true &&\n                        <i className={`float-right ${selectedAnswer === question.correct ? 'fas fa-check text-success' : 'fas fa-times text-danger'}`}/>\n                    }\n                </h3>\n                <ul className=\"list-group\">\n                    <li className={`list-group-item ${graded === true ? getBackgroundColor(\"true\") : ''}`}>\n                        <label><input type=\"radio\" name={question._id} value=\"true\"\n                                      onClick={() => {\n                                          if (graded === false) {\n                                              setSelectedAnswer(\"true\")\n                                          }\n                                      }}/>True</label>\n                        {\n                            graded === true &&\n\n                            <i className={`float-right ${getIcon(\"true\")}`}/>\n                        }\n                    </li>\n                    <li className={`list-group-item ${graded === true ? getBackgroundColor(\"false\") : ''}`}>\n                        <label><input type=\"radio\" name={question._id} value=\"false\"\n                                      onClick={() => {\n                                          if (graded === false) {\n                                              setSelectedAnswer(\"false\")\n                                          }\n                                      }}/>False</label>\n                        {\n                            graded === true &&\n\n                            <i className={`float-right ${getIcon(\"false\")}`}/>\n                        }\n                    </li>\n                </ul>\n                <p>\n                    Your answer: {selectedAnswer}\n                </p>\n                <button type=\"button\"\n                        className=\"btn btn-success\"\n                        onClick={() => {\n                            setGraded(true)\n                        }}\n                >Grade\n                </button>\n            </>\n        )\n}\n\n\nexport default TrueFalseQuestion"]},"metadata":{},"sourceType":"module"}