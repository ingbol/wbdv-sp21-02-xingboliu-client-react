{"ast":null,"code":"var _jsxFileName = \"/Users/liuxingbo/webdev/2021/spring/02/wbdv-sp21-02-xingboliu-client-react/src/components/course-editor/topic-pills.js\",\n    _s = $RefreshSig$();\n\nimport topicService from \"../../services/topic-service\";\nimport { useParams } from \"react-router-dom\";\nimport React, { useEffect } from 'react';\nimport EditableItem from \"../editable-item\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TopicPills = ({\n  topics = [],\n  findTopicsForLesson,\n  createTopic,\n  updateTopic,\n  deleteTopic\n}) => {\n  _s();\n\n  const {\n    layout,\n    courseId,\n    moduleId,\n    lessonId,\n    topicId\n  } = useParams();\n  useEffect(() => {\n    // if(lessonId !== \"undefined\" && typeof lessonId !== \"undefined\") {\n    //     findTopicsForLesson(lessonId)\n    // }\n    findTopicsForLesson(lessonId);\n  }, [moduleId, lessonId]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"nav nav-pills\",\n    children: [topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(EditableItem, {\n        active: topic._id === topicId,\n        to: `/courses/${layout}/edit/${courseId}/modules/${moduleId}/lessons/${lessonId}/topics/${topic._id}`,\n        updateItem: updateTopic,\n        deleteItem: deleteTopic,\n        item: topic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => {\n          if (lessonId !== \"undefined\" && typeof lessonId !== \"undefined\") createTopic(lessonId);\n        },\n        className: \"fas fa-plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TopicPills, \"UxxtbrmIGsov52U5dDxnIAsQk5o=\", false, function () {\n  return [useParams];\n});\n\n_c = TopicPills;\n\nconst stpm = state => ({\n  topics: state.topicReducer.topics\n});\n\nconst dtpm = dispatch => ({\n  findTopicsForLesson: lessonId => {\n    topicService.findTopicsForLesson(lessonId).then(topics => dispatch({\n      type: \"FIND_TOPICS_FOR_LESSON\",\n      topics\n    }));\n  },\n  createTopic: lessonId => {\n    topicService.createTopic(lessonId, {\n      title: \"New Topic\"\n    }).then(topic => dispatch({\n      type: \"CREATE_TOPICS\",\n      topic\n    }));\n  },\n  updateTopic: topic => {\n    topicService.updateTopic(topic._id, topic).then(status => dispatch({\n      type: \"UPDATE_TOPIC\",\n      topic\n    }));\n  },\n  deleteLesson: topic => {\n    topicService.deleteTopic(topic._id).then(status => dispatch({\n      type: \"DELETE_TOPIC\",\n      topic\n    }));\n  }\n});\n\nexport default connect(stpm, dtpm)(TopicPills);\n\nvar _c;\n\n$RefreshReg$(_c, \"TopicPills\");","map":{"version":3,"sources":["/Users/liuxingbo/webdev/2021/spring/02/wbdv-sp21-02-xingboliu-client-react/src/components/course-editor/topic-pills.js"],"names":["topicService","useParams","React","useEffect","EditableItem","connect","TopicPills","topics","findTopicsForLesson","createTopic","updateTopic","deleteTopic","layout","courseId","moduleId","lessonId","topicId","map","topic","_id","stpm","state","topicReducer","dtpm","dispatch","then","type","title","status","deleteLesson"],"mappings":"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","sourcesContent":["import topicService from \"../../services/topic-service\";\nimport {useParams} from \"react-router-dom\";\nimport React, {useEffect} from 'react'\nimport EditableItem from \"../editable-item\";\nimport {connect} from \"react-redux\";\n\nconst TopicPills = (\n    {\n        topics = [],\n        findTopicsForLesson,\n        createTopic,\n        updateTopic,\n        deleteTopic,\n    }) => {\n    const {layout, courseId, moduleId, lessonId, topicId} = useParams();\n    useEffect(() => {\n        // if(lessonId !== \"undefined\" && typeof lessonId !== \"undefined\") {\n        //     findTopicsForLesson(lessonId)\n        // }\n        findTopicsForLesson(lessonId)\n    }, [moduleId, lessonId])\n\n    return (\n        <ul className=\"nav nav-pills\">\n            {\n                topics.map(topic =>\n                    <li className=\"nav-item\">\n                        <EditableItem\n                            active={topic._id === topicId}\n                            to={`/courses/${layout}/edit/${courseId}/modules/${moduleId}/lessons/${lessonId}/topics/${topic._id}`}\n                            updateItem={updateTopic}\n                            deleteItem={deleteTopic}\n                            item={topic}\n                        />\n                    </li>\n                )\n            }\n\n            <li>\n                <i onClick={() => {\n                    if(lessonId !== \"undefined\" && typeof lessonId !== \"undefined\")\n                        createTopic(lessonId)}\n                }\n                   className=\"fas fa-plus\"></i>\n            </li>\n\n\n        </ul>\n    )\n}\n\nconst stpm = (state) => ({\n    topics: state.topicReducer.topics\n})\n\nconst dtpm = (dispatch) => ({\n    findTopicsForLesson: (lessonId) => {\n        topicService.findTopicsForLesson(lessonId)\n            .then(topics => dispatch({\n                type: \"FIND_TOPICS_FOR_LESSON\",\n                topics\n            }))\n    },\n    createTopic: (lessonId) => {\n        topicService.createTopic(lessonId, {title: \"New Topic\"})\n            .then(topic => dispatch({\n                type:\"CREATE_TOPICS\",\n                topic\n            }))\n    },\n    updateTopic: (topic) => {\n        topicService.updateTopic(topic._id, topic)\n            .then(status => dispatch({\n                type:\"UPDATE_TOPIC\",\n                topic\n            }))\n    },\n    deleteLesson: (topic) => {\n        topicService.deleteTopic(topic._id)\n            .then(status => dispatch({\n                type:\"DELETE_TOPIC\",\n                topic\n            }))\n    }\n})\n\nexport default connect(stpm, dtpm)(TopicPills)"]},"metadata":{},"sourceType":"module"}