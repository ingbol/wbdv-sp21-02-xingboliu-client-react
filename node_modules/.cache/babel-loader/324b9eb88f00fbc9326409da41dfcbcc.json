{"ast":null,"code":"var _jsxFileName = \"/Users/liuxingbo/webdev/2021/spring/02/wbdv-sp21-02-xingboliu-client-react/src/components/course-editor/lesson-tabs.js\",\n    _s = $RefreshSig$();\n\nimport lessonService from \"../../services/lesson-service\";\nimport { useParams } from \"react-router-dom\";\nimport React, { useEffect } from 'react';\nimport EditableItem from \"../editable-item\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LessonTabs = ({\n  lessons = [],\n  findLessonsForModule,\n  createLesson,\n  updateLesson,\n  deleteLesson\n}) => {\n  _s();\n\n  const {\n    layout,\n    courseId,\n    moduleId,\n    lessonId\n  } = useParams();\n  useEffect(() => {\n    // if(moduleId !== \"undefined\" && typeof moduleId !== \"undefined\") {\n    //     findLessonsForModule(moduleId)\n    // }\n    findLessonsForModule(moduleId);\n  }, [moduleId]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"nav nav-tabs\",\n    children: [lessons.map(lesson => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(EditableItem, {\n        active: lesson._id === lessonId,\n        to: `/courses/${layout}/edit/${courseId}/modules/${moduleId}/lessons/${lesson._id}`,\n        updateItem: updateLesson,\n        deleteItem: deleteLesson,\n        item: lesson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => {\n          if (moduleId !== \"undefined\" && typeof moduleId !== \"undefined\") createLesson(moduleId);\n        },\n        className: \"fas fa-plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LessonTabs, \"DGdCDxTMIfh9Oj8dMySm0IZRvM4=\", false, function () {\n  return [useParams];\n});\n\n_c = LessonTabs;\n\nconst stpm = state => ({\n  lessons: state.lessonReducer.lessons\n});\n\nconst dtpm = dispatch => ({\n  findLessonsForModule: moduleId => {\n    lessonService.findLessonsForModule(moduleId).then(lessons => dispatch({\n      type: \"FIND_LESSONS_FOR_MODULE\",\n      lessons\n    }));\n  },\n  createLesson: moduleId => {\n    lessonService.createLesson(moduleId, {\n      title: \"New Lesson\"\n    }).then(lesson => dispatch({\n      type: \"CREATE_LESSON\",\n      lesson\n    }));\n  },\n  updateLesson: lesson => {\n    lessonService.updateLesson(lesson._id, lesson).then(status => dispatch({\n      type: \"UPDATE_LESSON\",\n      lesson\n    }));\n  },\n  deleteLesson: lesson => {\n    lessonService.deleteLesson(lesson._id).then(status => dispatch({\n      type: \"DELETE_LESSON\",\n      lesson\n    }));\n  }\n});\n\nexport default connect(stpm, dtpm)(LessonTabs);\n\nvar _c;\n\n$RefreshReg$(_c, \"LessonTabs\");","map":{"version":3,"sources":["/Users/liuxingbo/webdev/2021/spring/02/wbdv-sp21-02-xingboliu-client-react/src/components/course-editor/lesson-tabs.js"],"names":["lessonService","useParams","React","useEffect","EditableItem","connect","LessonTabs","lessons","findLessonsForModule","createLesson","updateLesson","deleteLesson","layout","courseId","moduleId","lessonId","map","lesson","_id","stpm","state","lessonReducer","dtpm","dispatch","then","type","title","status"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,+BAA1B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,UAAU,GAAG,CACf;AACIC,EAAAA,OAAO,GAAG,EADd;AAEIC,EAAAA,oBAFJ;AAGIC,EAAAA,YAHJ;AAIIC,EAAAA,YAJJ;AAKIC,EAAAA;AALJ,CADe,KAOT;AAAA;;AACN,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,MAAyCd,SAAS,EAAxD;AACAE,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACAK,IAAAA,oBAAoB,CAACM,QAAD,CAApB;AACH,GALQ,EAKN,CAACA,QAAD,CALM,CAAT;AAOA,sBACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA,eAEQP,OAAO,CAACS,GAAR,CAAYC,MAAM,iBAClB;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,6BACI,QAAC,YAAD;AACI,QAAA,MAAM,EAAEA,MAAM,CAACC,GAAP,KAAeH,QAD3B;AAEI,QAAA,EAAE,EAAG,YAAWH,MAAO,SAAQC,QAAS,YAAWC,QAAS,YAAWG,MAAM,CAACC,GAAI,EAFtF;AAGI,QAAA,UAAU,EAAER,YAHhB;AAII,QAAA,UAAU,EAAEC,YAJhB;AAKI,QAAA,IAAI,EAAEM;AALV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,CAFR,eAeQ;AAAA,6BACI;AAAG,QAAA,OAAO,EAAE,MAAM;AACd,cAAGH,QAAQ,KAAK,WAAb,IAA4B,OAAOA,QAAP,KAAoB,WAAnD,EACIL,YAAY,CAACK,QAAD,CAAZ;AAAuB,SAF/B;AAIG,QAAA,SAAS,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA3CD;;GAAMR,U;UAQ6CL,S;;;KAR7CK,U;;AA6CN,MAAMa,IAAI,GAAIC,KAAD,KAAY;AACrBb,EAAAA,OAAO,EAAEa,KAAK,CAACC,aAAN,CAAoBd;AADR,CAAZ,CAAb;;AAIA,MAAMe,IAAI,GAAIC,QAAD,KAAe;AACxBf,EAAAA,oBAAoB,EAAGM,QAAD,IAAc;AAChCd,IAAAA,aAAa,CAACQ,oBAAd,CAAmCM,QAAnC,EACKU,IADL,CACUjB,OAAO,IAAIgB,QAAQ,CAAC;AACtBE,MAAAA,IAAI,EAAE,yBADgB;AAEtBlB,MAAAA;AAFsB,KAAD,CAD7B;AAKH,GAPuB;AAQxBE,EAAAA,YAAY,EAAGK,QAAD,IAAc;AACxBd,IAAAA,aAAa,CAACS,YAAd,CAA2BK,QAA3B,EAAqC;AAACY,MAAAA,KAAK,EAAE;AAAR,KAArC,EACKF,IADL,CACUP,MAAM,IAAIM,QAAQ,CAAC;AACtBE,MAAAA,IAAI,EAAC,eADiB;AAEtBR,MAAAA;AAFsB,KAAD,CAD5B;AAKH,GAduB;AAexBP,EAAAA,YAAY,EAAGO,MAAD,IAAY;AACtBjB,IAAAA,aAAa,CAACU,YAAd,CAA2BO,MAAM,CAACC,GAAlC,EAAuCD,MAAvC,EACKO,IADL,CACUG,MAAM,IAAIJ,QAAQ,CAAC;AACrBE,MAAAA,IAAI,EAAC,eADgB;AAErBR,MAAAA;AAFqB,KAAD,CAD5B;AAKH,GArBuB;AAsBxBN,EAAAA,YAAY,EAAGM,MAAD,IAAY;AACtBjB,IAAAA,aAAa,CAACW,YAAd,CAA2BM,MAAM,CAACC,GAAlC,EACKM,IADL,CACUG,MAAM,IAAIJ,QAAQ,CAAC;AACrBE,MAAAA,IAAI,EAAC,eADgB;AAErBR,MAAAA;AAFqB,KAAD,CAD5B;AAKH;AA5BuB,CAAf,CAAb;;AA+BA,eAAeZ,OAAO,CAACc,IAAD,EAAOG,IAAP,CAAP,CAAoBhB,UAApB,CAAf","sourcesContent":["import lessonService from \"../../services/lesson-service\";\nimport {useParams} from \"react-router-dom\";\nimport React, {useEffect} from 'react'\nimport EditableItem from \"../editable-item\";\nimport {connect} from \"react-redux\";\n\nconst LessonTabs = (\n    {\n        lessons = [],\n        findLessonsForModule,\n        createLesson,\n        updateLesson,\n        deleteLesson,\n    }) => {\n    const {layout, courseId, moduleId, lessonId} = useParams();\n    useEffect(() => {\n        // if(moduleId !== \"undefined\" && typeof moduleId !== \"undefined\") {\n        //     findLessonsForModule(moduleId)\n        // }\n        findLessonsForModule(moduleId)\n    }, [moduleId])\n\n    return (\n        <ul className=\"nav nav-tabs\">\n            {\n                lessons.map(lesson =>\n                <li className=\"nav-item\">\n                    <EditableItem\n                        active={lesson._id === lessonId}\n                        to={`/courses/${layout}/edit/${courseId}/modules/${moduleId}/lessons/${lesson._id}`}\n                        updateItem={updateLesson}\n                        deleteItem={deleteLesson}\n                        item={lesson}\n                    />\n                </li>\n                )\n            }\n\n                <li>\n                    <i onClick={() => {\n                        if(moduleId !== \"undefined\" && typeof moduleId !== \"undefined\")\n                            createLesson(moduleId)}\n                    }\n                       className=\"fas fa-plus\"></i>\n                </li>\n\n\n        </ul>\n    )\n}\n\nconst stpm = (state) => ({\n    lessons: state.lessonReducer.lessons\n})\n\nconst dtpm = (dispatch) => ({\n    findLessonsForModule: (moduleId) => {\n        lessonService.findLessonsForModule(moduleId)\n            .then(lessons => dispatch({\n                type: \"FIND_LESSONS_FOR_MODULE\",\n                lessons\n            }))\n    },\n    createLesson: (moduleId) => {\n        lessonService.createLesson(moduleId, {title: \"New Lesson\"})\n            .then(lesson => dispatch({\n               type:\"CREATE_LESSON\",\n               lesson\n            }))\n    },\n    updateLesson: (lesson) => {\n        lessonService.updateLesson(lesson._id, lesson)\n            .then(status => dispatch({\n                type:\"UPDATE_LESSON\",\n                lesson\n            }))\n    },\n    deleteLesson: (lesson) => {\n        lessonService.deleteLesson(lesson._id)\n            .then(status => dispatch({\n                type:\"DELETE_LESSON\",\n                lesson\n            }))\n    }\n})\n\nexport default connect(stpm, dtpm)(LessonTabs)"]},"metadata":{},"sourceType":"module"}